#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
using namespace std;

// Mootube : 각 노드끼리의 길이를 지정, 조건에 만족하는 탐색된 노드의 갯수를 출력하는 문제
// 선택한 동영상(Node)에서 각 동영상에 연결된 라인 USADO의 크기가 K보다 크거나 같다는
// 조건을 만족하는 동영상만을 추천시켜준다는 조건을 이용, BFS 사용
void InitCheck(bool check[])
{
	for (int i = 0; i < 5001; i++)
		check[i] = false;
}
int main(void)
{
	bool check[5001];
	int n, q;
	vector<pair<int, int>> usado[5001];
	cin >> n >> q;
	for (int i = 0; i < n - 1; i++)
	{
		int pi, qi, r;
		cin >> pi >> qi >> r;
		usado[pi].push_back({ qi, r });
		usado[qi].push_back({ pi, r });
	}
	for (int i = 0; i < q; i++)
	{
		int ki, vi, cnt = 0;
		cin >> ki >> vi;
		InitCheck(check);
		check[vi] = true;
		queue<int> bfs;
		bfs.push(vi);
		while (!bfs.empty())
		{
			int v = bfs.front();
			bfs.pop();
			for (int j = 0; j < usado[v].size(); j++)
			{
				int next = usado[v][j].first;
				int usd = usado[v][j].second;
				if (check[next]) continue;
				if (usd >= ki)
				{
					cnt++;
					check[next] = true;
					bfs.push(next);
				}
			}
		}
		cout << cnt << endl;
	}
}
